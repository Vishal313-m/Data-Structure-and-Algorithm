Here I will Give Three solutions to give to your Interviewer:
Method 1: Sorting the nums vector (PS. total scam)
Time complexity - O(n log n)

class Solution {
public:
    void sortColors(vector<int>& nums) {
       sort(nums.begin(), nums.end());
    }
};

Method 2: keep a count of 0's 1's and 2's
Time complexity - O(2N)

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int count0 = 0;
        int count1 = 0; 
        int count2  = 0;
        for(int i =0; i< nums.size(); i++){
            if(nums[i] == 0){
                count0++;
            }else if (nums[i] == 1){
                count1++;
            }else if (nums[i] ==2 ){
                count2++;
            }
            
         }
        for(int i =0; i< count0; i++){
            nums[i] =0;
        }
        for(int i =count0; i< (count1 + count0); i++){
            nums[i] =1;
        }
        for(int i =(count1 + count0); i< nums.size(); i++){
            nums[i] =2;
        }
        
    }
};


Method 3: using 3 pointers
Time complexity - O(N)
class Solution {
public:
    void sortColors(vector<int>& nums) {
        int low =0;
        int high=nums.size()-1; //Dutch National flag
        int mid=0;
        
        while(mid<=high)
        {
            switch(nums[mid]) // it checks nums of mid is 0 , 1, 2 ;
            {
                case 0:
                    swap(nums[low++],nums[mid++]);
                        break;
                    
                case 1:
                    mid++;
                    break;
                case 2:
                    swap(nums[mid],nums[high--]);
                    break;
                    
            }
        }
        
    }
};